{"pageProps":{"postData":{"id":"3d-ui","contentHtml":"<h2>Combine Webgl and React to create 3d UI</h2>\n<p>In modeling software and game editors, 3dUI is an indispensable part, through which user can intuitively manipulate the objects they edit. Some common 3dUIs are looks like:</p>\n<div class='m-5'></div>\n<img src=\"/images/3d-ui/manipulators.png\" alt=\"common 3dUIs\" style=\"width:800px; margin:auto\"/>\n<div class='m-5'></div>\n<p>In the Box3 game editor, we also need such manipulators. If we think about it a little bit, we will find that these 3d ui and ordinary React components actually have a lot in common. For example, they can be easily created and destroyed, they can accept props to calculate the initial state, and they have to actively respond to the userâ€™s actions (translation, rotation, scale).</p>\n<div class='m-5'></div>\nThat why we want to use the lifecycle of traditional React components to control the creation and destruction of 3d UI. But here's another problem, the data used in webgl is outside of React, but with the React Context API, we can inject that data into React.\n","title":"3D UI of Box3 Game Editor","pic":"/images/3d-ui/1.png","keyword":"React, Context API, WebGL","description":"In Box3 Game Editor, we need 3dUI to control the object, this is how I implement it with React and WebGL","date":"2019-07-12"}},"__N_SSG":true}