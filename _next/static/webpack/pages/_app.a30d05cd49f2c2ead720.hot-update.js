webpackHotUpdate_N_E("pages/_app",{

/***/ "./components/webgl/webgl.js":
/*!***********************************!*\
  !*** ./components/webgl/webgl.js ***!
  \***********************************/
/*! exports provided: getContext, createProgram, createShader, createTexture, createUniform, activeTexture, updateTexture, setRectangle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getContext\", function() { return getContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createProgram\", function() { return createProgram; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createShader\", function() { return createShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTexture\", function() { return createTexture; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createUniform\", function() { return createUniform; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"activeTexture\", function() { return activeTexture; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateTexture\", function() { return updateTexture; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setRectangle\", function() { return setRectangle; });\nfunction getContext(canvas) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var contexts = ['webgl', 'experimental-webgl'];\n  var context = null;\n  contexts.some(function (name) {\n    try {\n      context = canvas.getContext(name, options);\n    } catch (e) {\n      console.error(e);\n    }\n\n    return context !== null;\n  });\n\n  if (context === null) {\n    document.body.classList.add('no-webgl');\n  }\n\n  return context;\n}\nfunction createProgram(gl, vertexScript, fragScript) {\n  var vertexShader = createShader(gl, vertexScript, gl.VERTEX_SHADER);\n  var fragShader = createShader(gl, fragScript, gl.FRAGMENT_SHADER);\n  var program = gl.createProgram();\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragShader);\n  gl.linkProgram(program);\n  var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n\n  if (!linked) {\n    var lastError = gl.getProgramInfoLog(program);\n    console.error('Error in program linking: ' + lastError);\n    gl.deleteProgram(program);\n    return null;\n  }\n\n  var positionLocation = gl.getAttribLocation(program, 'a_position'); // let texCoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n\n  var buffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer); // let textCoordBuffer = gl.createBuffer();\n  // gl.bindBuffer(gl.ARRAY_BUFFER, textCoordBuffer);\n\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0]), gl.STATIC_DRAW);\n  gl.enableVertexAttribArray(positionLocation); // gl.enableVertexAttribArray(texCoordLocation);\n  // gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n  // Create a buffer for the position of the rectangle corners.\n  // var buffer = gl.createBuffer();\n  // gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  // gl.enableVertexAttribArray(positionLocation);\n\n  gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n  return program;\n}\nfunction createShader(gl, script, type) {\n  var shader = gl.createShader(type);\n  gl.shaderSource(shader, script);\n  gl.compileShader(shader);\n  var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n  if (!compiled) {\n    var lastError = gl.getShaderInfoLog(shader);\n    error(\"Error compiling shader '\" + shader + \"':\" + lastError);\n    gl.deleteShader(shader);\n    return null;\n  }\n\n  return shader;\n}\nfunction createTexture(gl, source, i) {\n  var texture = gl.createTexture();\n  activeTexture(gl, i);\n  gl.bindTexture(gl.TEXTURE_2D, texture); // Set the parameters so we can render any size image.\n\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\n  if (source === null) {\n    return texture;\n  } else {\n    updateTexture(gl, source);\n  }\n\n  return texture;\n}\nfunction createUniform(gl, program, type, name) {\n  var location = gl.getUniformLocation(program, 'u_' + name);\n\n  for (var _len = arguments.length, args = new Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {\n    args[_key - 4] = arguments[_key];\n  }\n\n  gl['uniform' + type].apply(gl, [location].concat(args));\n}\nfunction activeTexture(gl, i) {\n  gl.activeTexture(gl['TEXTURE' + i]);\n}\nfunction updateTexture(gl, source) {\n  gl.textImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);\n}\nfunction setRectangle(gl, x, y, width, height) {\n  var x1 = x;\n  var x2 = x + width;\n  var y1 = y;\n  var y2 = y + height;\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([x1, y1, x2, y1, x1, y2, x1, y2, x2, y1, x2, y2]), gl.STATIC_DRAW);\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/next/dist/compiled/webpack/harmony-module.js */ \"./node_modules/next/dist/compiled/webpack/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/webgl/webgl.js\n");

/***/ })

})